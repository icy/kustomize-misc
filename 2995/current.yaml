---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/instance: myorg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myorg
  name: myorg-with-namespace
  namespace: foo
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: myorg
      app.kubernetes.io/name: myorg
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: myorg
        app.kubernetes.io/name: myorg
    spec:
      containers:
      - image: foo/bar
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: "/healthcheck.php"
            port: http
          timeoutSeconds: 10
        name: nginx
        ports:
      nodeSelector:
        mine/group: my_worker_group

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/instance: myorg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: myorg
  name: myorg-without-namespace
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: myorg
      app.kubernetes.io/name: myorg
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: myorg
        app.kubernetes.io/name: myorg
    spec:
      containers:
      - image: foo/bar
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: "/healthcheck.php"
            port: http
          timeoutSeconds: 10
        name: nginx
        ports:
      nodeSelector:
        mine/group: my_worker_group
